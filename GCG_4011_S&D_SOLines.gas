Program.Sub.ScreenSU.Start
Program.Sub.ScreenSU.End

Program.Sub.Preflight.Start

Program.Sub.Preflight.End

Program.Sub.Main.Start
F.Intrinsic.Control.SetErrorHandler("Main_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
'Variable to Hold Part Number
V.Local.sPart.Declare(String)
'Variable to Hold Rev Number
V.Local.sRev.Declare(String)
'Variable to Hold Loc
V.Local.sLoc.Declare(String)
'Check to see if Script 1 Hook is being clicked
F.Intrinsic.Control.If(V.Caller.Hook,=,12410)
	'Passed Variable for Part Number
	V.Local.sPart.Set(V.Passed.000052)
	'Passed Variable for Rev
	V.Local.sRev.Set(V.Passed.000053)
	'Passed Variable for Loc
	V.Local.sLoc.Set(V.Passed.000054)
	'Check to make sure a part number has been selected
	F.Intrinsic.Control.If(V.Local.sPart,<>,"")
		'Launch Supply and Demand Screen for the part, rev, location, and company code combo.
		F.Global.Inventory.CallSD(V.Local.sPart,V.Local.sRev,V.Local.sLoc,V.Caller.CompanyCode)
	F.Intrinsic.Control.Else
		'If no Part is entered inform user to select a part
		F.Intrinsic.UI.Msgbox("No Part has been selected, please select a part and then click on the S and D button again!","No Part Selected")
	F.Intrinsic.Control.EndIf
'Check to see if the Pop hook is the caller
F.Intrinsic.Control.Elseif(V.Caller.Hook,=,12010)
	'Change text on Script 1 to read S and D
	V.Passed.000162.Set("S and D")
F.Intrinsic.Control.EndIf
F.Intrinsic.Control.CallSub(Unload)
F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("Main_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_4011_S&D_SOLines.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Unload)
Function.Intrinsic.Control.EndIf


Program.Sub.Main.End

Program.Sub.Unload.Start
F.Intrinsic.Control.SetErrorHandler("Newsub_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
'End Program
F.Intrinsic.Control.End


F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("Newsub_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_4011_S&D_SOLines.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.End
Function.Intrinsic.Control.EndIf


Program.Sub.Unload.End

Program.Sub.Comments.Start
${$0$}$ATG_SD_SOLines.gas$}$ENM$}$6/18/2012
${$1$}$$}$$}$1$}$12010$}$OES0201I-POPULATE-HOOK$}$6/18/2012 9:54:56 PM$}$(Program: ORD201; Screen: OES0201I)

${$1$}$$}$$}$0$}$12410$}$OES0201I-SCRIPT-1-HOOK$}$6/18/2012 9:48:14 PM$}$(Program: ORD201; Screen: OES0201I)

${$3$}$0$}$$}$-1$}$-1$}$$}$1/1/1900$}$This will launch the Supply and Demand screen based on the Part being selected on the Sales Order Lines screen, off of the Script 1 button.
Program.Sub.Comments.End

